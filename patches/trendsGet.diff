From 3067ddf07e1d5ada6bb341c15b03996c02f26c0e Mon Sep 17 00:00:00 2001
From: tapetums <tapetums@live.jp>
Date: Mon, 13 Oct 2014 13:25:05 +0900
Subject: [PATCH] Implemented support for trends in the Twitter API v1.1

Signed-off-by: tapetums <tapetums@live.jp>
---
 twitcurl.cpp     |  82 +++++++++++++++++++++----------------------------------
 twitcurl.h       |   9 +++---
 twitcurlurls.h   |  10 ++++---
 3 files changed, 41 insertions(+), 60 deletions(-)

diff --git a/twitcurl.cpp b/twitcurl.cpp
index 066f376..8a4e0ac 100644
--- a/twitcurl.cpp
+++ b/twitcurl.cpp
@@ -1380,48 +1380,41 @@ bool twitCurl::savedSearchDestroy( std::string& searchId )
 
 
 /*++
-* @method: twitCurl::trendsGet()
+* @method: twitCurl::trendsGet
 *
 * @description: gets trends.
 *
-* @input: none
+* @input: id
+*         exclude
 *
 * @output: true if GET is success, otherwise false. This does not check http
 *          response by twitter. Use getLastWebResponse() for that.
 *
 *--*/
-bool twitCurl::trendsGet()
+__declspec(deprecated("** this function no longer works after version 1.1 of the API **"))
+bool twitCurl::trendsGet(uint32_t id, std::string exclude)
 {
+    /* Set option */
+    std::string option = "";
+    if( exclude.length() )
+    {
+        option = twitCurlDefaults::TWITCURL_URL_SEP_AMP +
+                 twitCurlDefaults::TWITCURL_EXCLUDE + exclude;
+    }
+
     /* Perform GET */
     return performGet( twitCurlDefaults::TWITCURL_PROTOCOLS[m_eProtocolType] +
                        twitterDefaults::TWITCURL_TRENDS_URL +
-                       twitCurlDefaults::TWITCURL_EXTENSIONFORMATS[m_eApiFormatType] );
+                       twitCurlDefaults::TWITCURL_EXTENSIONFORMATS[m_eApiFormatType] +
+                       twitCurlDefaults::TWITCURL_URL_SEP_QUES +
+                       twitCurlDefaults::TWITCURL_ID + std::to_string(id) + option );
 }
 
 
 /*++
-* @method: twitCurl::trendsDailyGet()
-*
-* @description: gets daily trends.
-*
-* @input: none
-*
-* @output: true if GET is success, otherwise false. This does not check http
-*          response by twitter. Use getLastWebResponse() for that.
-*
-*--*/
-bool twitCurl::trendsDailyGet()
-{
-    /* Perform GET */
-    return performGet( twitCurlDefaults::TWITCURL_PROTOCOLS[m_eProtocolType] +
-                       twitterDefaults::TWITCURL_TRENDSDAILY_URL +
-                       twitCurlDefaults::TWITCURL_EXTENSIONFORMATS[m_eApiFormatType] );
-}
-
-/*++
-* @method: twitCurl::trendsWeeklyGet()
+* @method: twitCurl::trendsAvailableGet()
 *
-* @description: gets weekly trends.
+* @description: gets available trends.
 *
 * @input: none
 *
@@ -1429,50 +1422,37 @@ bool twitCurl::trendsDailyGet()
 *          response by twitter. Use getLastWebResponse() for that.
 *
 *--*/
-bool twitCurl::trendsWeeklyGet()
+bool twitCurl::trendsAvailableGet()
 {
     /* Perform GET */
     return performGet( twitCurlDefaults::TWITCURL_PROTOCOLS[m_eProtocolType] +
-                       twitterDefaults::TWITCURL_TRENDSWEEKLY_URL +
+                       twitterDefaults::TWITCURL_TRENDSAVAILABLE_URL +
                        twitCurlDefaults::TWITCURL_EXTENSIONFORMATS[m_eApiFormatType] );
 }
 
-/*++
-* @method: twitCurl::trendsCurrentGet()
-*
-* @description: gets current trends.
-*
-* @input: none
-*
-* @output: true if GET is success, otherwise false. This does not check http
-*          response by twitter. Use getLastWebResponse() for that.
-*
-*--*/
-bool twitCurl::trendsCurrentGet()
-{
-    /* Perform GET */
-    return performGet( twitCurlDefaults::TWITCURL_PROTOCOLS[m_eProtocolType] +
-                       twitterDefaults::TWITCURL_TRENDSCURRENT_URL +
-                       twitCurlDefaults::TWITCURL_EXTENSIONFORMATS[m_eApiFormatType] );
-}
 
 /*++
-* @method: twitCurl::trendsAvailableGet()
+* @method: twitCurl::trendsClosestGet
 *
-* @description: gets available trends.
+* @description: gets closest locations for trending topic information.
 *
-* @input: none
+* @input: latitude  - limitied -180.0 to +180.0
+*         longitude - limitied -180.0 to +180.0
 *
 * @output: true if GET is success, otherwise false. This does not check http
 *          response by twitter. Use getLastWebResponse() for that.
 *
 *--*/
-bool twitCurl::trendsAvailableGet()
+bool twitCurl::trendsClosestGet(double latitude, double longitude)
 {
     /* Perform GET */
     return performGet( twitCurlDefaults::TWITCURL_PROTOCOLS[m_eProtocolType] +
-                       twitterDefaults::TWITCURL_TRENDSAVAILABLE_URL +
-                       twitCurlDefaults::TWITCURL_EXTENSIONFORMATS[m_eApiFormatType] );
+                       twitterDefaults::TWITCURL_TRENDSCLOSEST_URL +
+                       twitCurlDefaults::TWITCURL_EXTENSIONFORMATS[m_eApiFormatType] +
+                       twitCurlDefaults::TWITCURL_URL_SEP_QUES +
+                       twitCurlDefaults::TWITCURL_LATITUDE + std::to_string(latitude) +
+                       twitCurlDefaults::TWITCURL_URL_SEP_AMP +
+                       twitCurlDefaults::TWITCURL_LONGITUDE + std::to_string(longitude) );
 }
 
 /*++
diff --git a/twitcurl.h b/twitcurl.h
index 11f71aa..caffb92 100644
--- a/twitcurl.h
+++ b/twitcurl.h
@@ -1,6 +1,7 @@
 ï»¿#ifndef _TWITCURL_H_
 #define _TWITCURL_H_
 
+#include <cstdint>
 #include <string>
 #include <sstream>
 #include <cstring>
@@ -111,11 +112,9 @@ public:
     bool savedSearchDestroy( std::string& searchId /* in */ );
 
     /* Twitter trends APIs (JSON) */
-    bool trendsGet();
-    bool trendsDailyGet();
-    bool trendsWeeklyGet();
-    bool trendsCurrentGet();
+    bool trendsGet(uint32_t id, std::string exclude = "");
     bool trendsAvailableGet();
+    bool trendsClosestGet(double latitude, double longitude);
 
     /* cURL APIs */
     bool isCurlInit();
@@ -138,7 +137,7 @@ public:
     /* Clones this object */
     twitCurl* clone();
 
-private:
+protected:
     /* cURL data */
     CURL* m_curlHandle;
     char* m_errorBuffer;
diff --git a/twitcurlurls.h b/twitcurlurls.h
index ddc08fb..f0e70d7 100644
--- a/twitcurlurls.h
+++ b/twitcurlurls.h
@@ -37,6 +37,10 @@ namespace twitCurlDefaults
     const std::string TWITCURL_INCLUDE_ENTITIES = "include_entities=";
     const std::string TWITCURL_STRINGIFY_IDS = "stringify_ids=";
     const std::string TWITCURL_INREPLYTOSTATUSID = "in_reply_to_status_id=";
+    const std::string TWITCURL_ID = "id=";
+    const std::string TWITCURL_EXCLUDE = "exclude=";
+    const std::string TWITCURL_LATITUDE = "lat=";
+    const std::string TWITCURL_LONGITUDE = "long=";
 
     /* URL separators */
     const std::string TWITCURL_URL_SEP_AMP = "&";
@@ -109,11 +113,9 @@ namespace twitterDefaults
     const std::string TWITCURL_SAVEDSEARCHDESTROY_URL = TWITCURL_BASE_URL + "saved_searches/destroy/";
 
     /* Trends URLs */
-    const std::string TWITCURL_TRENDS_URL = TWITCURL_BASE_URL + "trends";
-    const std::string TWITCURL_TRENDSDAILY_URL = TWITCURL_BASE_URL + "trends/daily";
-    const std::string TWITCURL_TRENDSCURRENT_URL = TWITCURL_BASE_URL + "trends/current";
-    const std::string TWITCURL_TRENDSWEEKLY_URL = TWITCURL_BASE_URL + "trends/weekly";
+    const std::string TWITCURL_TRENDS_URL = TWITCURL_BASE_URL + "trends/place";
     const std::string TWITCURL_TRENDSAVAILABLE_URL = TWITCURL_BASE_URL + "trends/available";
+    const std::string TWITCURL_TRENDSCLOSEST_URL = TWITCURL_BASE_URL + "trends/closest";
 
 };
-- 
1.9.4.msysgit.2

